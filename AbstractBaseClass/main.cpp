#include<iostream>
using namespace std;

class Weapon
{
	int damage;	//Наносимый урон
	int size;
public:
	Weapon(int damage, int size) :damage(damage), size(size)
	{
	}
	virtual ~Weapon()
	{
	}
	virtual void apply() = 0;	//чисто виртуальный метод (Чисто виртуальная функция)

	virtual void info()
	{
		cout << "Damage:\t" << damage << endl;
		cout << "Size:\t" << size << endl;
	}
};

class ColdArms :public Weapon
{
public:
	ColdArms(int damage, int size) : Weapon(damage, size){}
	~ColdArms(){}
	//Этот класс Не определяет чисто виртуальный метод apply а просто наследует его чистую виртуальность и следовательно этот клас так же является абстрактным. 
};

class Knife : public ColdArms
{
public:
	Knife(int damage, int size):ColdArms(damage,size){}
	~Knife(){}
	// Этот класс уже является конкретным по скольку он реализует чисто виртуальную функцию apply()
	void apply()
	{
		cout << "Чистить картошку, резать яблоки" << endl;
	}
	void info()
	{
		Weapon::info();
		apply();
	}
};

class Machete :public ColdArms
{
public:
	Machete(int damage, int size):ColdArms(damage,size){}
	~Machete()	{}
	void apply()
	{
		cout << "Отлично рубит сахарный тросник, так же очень удобен для стрижки деревьев" << endl;
	}
	void info()
	{
		Weapon::info();
		apply();
	}
};

void main()
{
	setlocale(LC_ALL, "");
	//Weapon w(20,5);    w.info();  //Создать экземпляр этого класса нельзя поскольку он тоже является абстрактным

	//ColdArms ca(20, 5);	//Создать экземпляр этого класса нельзя поскольку он тоже является абстрактным

	Knife kn(20, 5);		kn.info();
	Machete m(50, 25);		m.info();


}

//Абстрактный базовый класс
/*
	Абстрактным называется класс не имеющий экземпляров по скольку они не могут существовать например растение, животное, оружие, транспорт это всё абстрактные понятия а объекты являются экземплярами каких то конкретных классов например дуб, кот, пистолет или автомобиль
	Абстрактные классы лишь обобщают некоторые свойства других классов и таким образом предназначенны лишь для класификации объектов и для создания классовых иерархий
	Для того чтобы сделать класс абстрактным в нём нужно объявить хотя бы один чисто виртуальный метод.
	Чисто виртуальным называется метод не имеющий определение.
	Чисто виртуальный метод обязательно должен быть определён в дочернем классе в противном случае дочерний класс унаследует чистую виртуальность и тоже будет абстрактным.

*/