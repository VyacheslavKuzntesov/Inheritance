#include<iostream>
using namespace std;

void main()
{
	setlocale(LC_ALL, "");

}

/*
	НАСЛЕДОВАНИЕ Inheritance
	Наследование это способность классов наследовать свойства других классов
	В наследовании разлечают базовый или родительский класс это класс от которого наследуют и дочерний или производный класс это класс который наследует чужие свойства
	Базовый класс(Base class) не знает сколько и каких классов от него унаследованно
	А дочерний класc(Derived class) знает только своего ближайщего родителя и не знает своих прародителей

	Наследование обобщает свойства разных классов и позволяет их вывести в отдельный класс а это в свою очередь в значительной степени сокращает объем исходного кода а так же распределяет ответственность между разными классами
	Наследование реализует отношения между классами типа является (is a) и по этому прежде чем что-то от чего-то унаследовать нужно убедиться в том что что-то является чем-то например кот является животным? - да, грузовик является машиной? - да, колесо являеться машиной? - нет поэтому класс калесо нельзя унаследовать от класса "машина"
	Машина агрегирует в себя колесо и это не наследование а агрегирование

	ПОЛИМОРФИЗМ
	Полиморфизм(Многоформенность) - это способность объектов вести себя по разному в зависимости от обстоятельств.
	Полиморфизм реалезуется при помощи перегрузки функций в частности перегрузки оператора Обстоятельствами в данном случае являются параметры с которыми вызывается функция
	Такой полиморфизм ещё называют "На этапе компиляции"(Compile-Time Polymorphism) или же Ad-hoc Polymorphism но особое место в ООП занимает так называемый Inclusion Polymorphism или же Run-Time Polymorphis - это способность объектов вести себя по разному в зависимости от того кем они являются
	Например  любое животное может издовать звуки но каждое животное издает какие то свои звуки взависимости от того кем оно является

	Run-Time Polimorphism называют Полиморфизм подтипов

	Run-Time Polimorphism или полиморфизм подтипов реализуется при помощи указателей на базовый класс и виртуальных методах

	УКАЗАТЕЛИ НА БАЗОВЫЙ КЛАСС
	Очень важным их свойством является способность хранить адрес дочернего объекта за счёт этого указатели на базовый класс позволяют выполнить GEneralisation (Обобщение) тоесть собрать объекты разных подклассов в одном месте например в одном массиве 


	Виртуальные функции(виртуальные методы)
	Виртуальным называется метод который может быть переопределён в дочернем классе с учётом его полей дело в том что базовый класс не знает сколько и каких классом от него унаследованно и тем более не знает из каких полей состоят эти классы но благодоря виртуальным методам из базового класса может быть вызван метод в дочернем классекоторый знает из каких полей состоит этот дочерний класс 
	Виртуальный метод это единственный способ заглянуть из базового класса в дочерний класс
	Виртуальные методы позволяют выполнить Specialisation(Уточнение) тоесть сказать какой это именно объект и как именно с ним можно работать
*/